# Server Configuration
server.port=8081
spring.application.name=api-gateway-service

# Global Configuration
spring.cloud.gateway.default-filters[0]=PreserveHostHeader
#spring.cloud.gateway.default-filters[1].name=CircuitBreaker
#spring.cloud.gateway.default-filters[1].args.fallbackUri=forward:/fallback

# Microservices Base URLs
microservices.customer.url=http://asm-msa-customer:8082
microservices.account.url=http://asm-msa-account:8083
microservices.transaction.url=http://asm-msa-transaction:8084
microservices.identity.url=http://asm-msa-identity:8086

# Routes Configuration

# Entity Customer:

# GET: http://localhost:8082/api/customers
spring.cloud.gateway.routes[0].id=customers-list
spring.cloud.gateway.routes[0].uri=${microservices.customer.url}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/service/customers
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/service/customers, /api/customers

# GET/PUT/PATCH/DELETE: http://localhost:8082/api/customer/{guid}
spring.cloud.gateway.routes[1].id=customer-by-guid
spring.cloud.gateway.routes[1].uri=${microservices.customer.url}
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/service/customer/{guid}
spring.cloud.gateway.routes[1].predicates[1]=Method=GET,PUT,PATCH,DELETE
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/service/customer/(?<guid>[^/]+), /api/customer/${guid}

# POST: http://localhost:8082/api/customer/create
spring.cloud.gateway.routes[2].id=customer-create
spring.cloud.gateway.routes[2].uri=${microservices.customer.url}
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/service/customer/create
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/service/customer/create, /api/customer/create

# Entity Account:

# GET: http://localhost:8083/api/accounts
spring.cloud.gateway.routes[3].id=accounts-list
spring.cloud.gateway.routes[3].uri=${microservices.account.url}
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/service/accounts
spring.cloud.gateway.routes[3].predicates[1]=Method=GET
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/service/accounts, /api/accounts

# GET/PUT/PATCH/DELETE: http://localhost:8083/api/account/{guid}
spring.cloud.gateway.routes[4].id=account-by-guid
spring.cloud.gateway.routes[4].uri=${microservices.account.url}
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/service/account/{guid}
spring.cloud.gateway.routes[4].predicates[1]=Method=GET,PUT,PATCH,DELETE
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/service/account/(?<guid>[^/]+), /api/account/${guid}

# POST: http://localhost:8083/api/account/create
spring.cloud.gateway.routes[5].id=account-create
spring.cloud.gateway.routes[5].uri=${microservices.account.url}
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/service/account/create
spring.cloud.gateway.routes[5].predicates[1]=Method=POST
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/api/service/account/create, /api/account/create

# GET: http://localhost:8083/api/accounts/customer/{customerId}
spring.cloud.gateway.routes[6].id=accounts-by-customer
spring.cloud.gateway.routes[6].uri=${microservices.account.url}
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/service/accounts/customer/{customerId}
spring.cloud.gateway.routes[6].predicates[1]=Method=GET
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/api/service/accounts/customer/(?<customerId>[^/]+), /api/accounts/customer/${customerId}

# Entity Transaction:

# GET: http://localhost:8084/api/transaction/{guid}
spring.cloud.gateway.routes[7].id=transaction-by-guid
spring.cloud.gateway.routes[7].uri=${microservices.transaction.url}
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/service/transaction/{guid}
spring.cloud.gateway.routes[7].predicates[1]=Method=GET
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/api/service/transaction/(?<guid>[^/]+), /api/transaction/${guid}

# GET: http://localhost:8084/api/transactions/filter
spring.cloud.gateway.routes[8].id=transaction-filter
spring.cloud.gateway.routes[8].uri=${microservices.transaction.url}
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/service/transactions/filter
spring.cloud.gateway.routes[8].predicates[1]=Method=GET
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/api/service/transactions/filter, /api/transactions/filter

# POST: http://localhost:8084/api/transaction/create
spring.cloud.gateway.routes[9].id=transaction-create
spring.cloud.gateway.routes[9].uri=${microservices.transaction.url}
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/service/transaction/create
spring.cloud.gateway.routes[9].predicates[1]=Method=POST
spring.cloud.gateway.routes[9].filters[0]=RewritePath=/api/service/transaction/create, /api/transaction/create

# GET: http://localhost:8084/api/transactions
spring.cloud.gateway.routes[10].id=transactions-list
spring.cloud.gateway.routes[10].uri=${microservices.transaction.url}
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/service/transactions
spring.cloud.gateway.routes[10].predicates[1]=Method=GET
spring.cloud.gateway.routes[10].filters[0]=RewritePath=/api/service/transactions, /api/transactions

# GET: http://localhost:8084/api/report/transactions
spring.cloud.gateway.routes[11].id=report-transactions
spring.cloud.gateway.routes[11].uri=${microservices.transaction.url}
spring.cloud.gateway.routes[11].predicates[0]=Path=/api/service/report/transactions
spring.cloud.gateway.routes[11].predicates[1]=Method=POST
spring.cloud.gateway.routes[11].filters[0]=RewritePath=/api/service/report/transactions, /api/report/transactions

# Entity Identity:

# GET: http://localhost:8086/api/users
spring.cloud.gateway.routes[12].id=users-list
spring.cloud.gateway.routes[12].uri=${microservices.identity.url}
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/service/users
spring.cloud.gateway.routes[12].predicates[1]=Method=GET
spring.cloud.gateway.routes[12].filters[0]=RewritePath=/api/service/users, /api/users

# GET: http://localhost:8086/api/user/{guid}
spring.cloud.gateway.routes[13].id=user-by-guid
spring.cloud.gateway.routes[13].uri=${microservices.identity.url}
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/service/user/{guid}
spring.cloud.gateway.routes[13].predicates[1]=Method=GET
spring.cloud.gateway.routes[13].filters[0]=RewritePath=/api/service/user/(?<guid>[^/]+), /api/user/${guid}

# POST: http://localhost:8086/api/user/create
spring.cloud.gateway.routes[14].id=user-create
spring.cloud.gateway.routes[14].uri=${microservices.identity.url}
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/service/user/create
spring.cloud.gateway.routes[14].predicates[1]=Method=POST
spring.cloud.gateway.routes[14].filters[0]=RewritePath=/api/service/user/create, /api/user/create

# POST: http://localhost:8086/api/identity/login
spring.cloud.gateway.routes[15].id=identity-login
spring.cloud.gateway.routes[15].uri=${microservices.identity.url}
spring.cloud.gateway.routes[15].predicates[0]=Path=/api/service/identity/login
spring.cloud.gateway.routes[15].predicates[1]=Method=POST
spring.cloud.gateway.routes[15].filters[0]=RewritePath=/api/service/identity/login, /api/identity/login




# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging Configuration (ERROR, WARN, INFO, DEBUG, TRACE)
logging.level.root=INFO
logging.level.com.company.asm.gateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=INFO
